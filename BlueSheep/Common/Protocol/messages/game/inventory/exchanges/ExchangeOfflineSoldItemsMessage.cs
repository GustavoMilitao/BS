//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Common.Protocol.Messages.Game.Inventory.Exchanges
{
    using BlueSheep.Common.Protocol.Types.Game.Data.Items;
    using System.Collections.Generic;
    using BlueSheep.Common.Protocol.Messages;
    using BlueSheep.Common.Protocol.Types;
    using BlueSheep.Protocol;
    
    
    using BlueSheep.Engine.Types;

 	 public class ExchangeOfflineSoldItemsMessage : Message 
    {
        
        public new const int ID = 6613;
        
        public override int MessageID
        {
            get
            {
                return ID;
            }
        }
        
        private List<ObjectItemGenericQuantityPrice> m_bidHouseItems;
        
        public virtual List<ObjectItemGenericQuantityPrice> BidHouseItems
        {
            get
            {
                return m_bidHouseItems;
            }
            set
            {
                m_bidHouseItems = value;
            }
        }
        
        private List<ObjectItemGenericQuantityPrice> m_merchantItems;
        
        public virtual List<ObjectItemGenericQuantityPrice> MerchantItems
        {
            get
            {
                return m_merchantItems;
            }
            set
            {
                m_merchantItems = value;
            }
        }
        
        public ExchangeOfflineSoldItemsMessage(List<ObjectItemGenericQuantityPrice> bidHouseItems, List<ObjectItemGenericQuantityPrice> merchantItems)
        {
            m_bidHouseItems = bidHouseItems;
            m_merchantItems = merchantItems;
        }
        
        public ExchangeOfflineSoldItemsMessage()
        {
        }
        
        public override void Serialize(IDataWriter writer)
        {
            writer.WriteShort(((short)(m_bidHouseItems.Count)));
            int bidHouseItemsIndex;
            for (bidHouseItemsIndex = 0; (bidHouseItemsIndex < m_bidHouseItems.Count); bidHouseItemsIndex = (bidHouseItemsIndex + 1))
            {
                ObjectItemGenericQuantityPrice objectToSend = m_bidHouseItems[bidHouseItemsIndex];
                objectToSend.Serialize(writer);
            }
            writer.WriteShort(((short)(m_merchantItems.Count)));
            int merchantItemsIndex;
            for (merchantItemsIndex = 0; (merchantItemsIndex < m_merchantItems.Count); merchantItemsIndex = (merchantItemsIndex + 1))
            {
                ObjectItemGenericQuantityPrice objectToSend = m_merchantItems[merchantItemsIndex];
                objectToSend.Serialize(writer);
            }
        }
        
        public override void Deserialize(IDataReader reader)
        {
            int bidHouseItemsCount = reader.ReadUShort();
            int bidHouseItemsIndex;
            m_bidHouseItems = new System.Collections.Generic.List<ObjectItemGenericQuantityPrice>();
            for (bidHouseItemsIndex = 0; (bidHouseItemsIndex < bidHouseItemsCount); bidHouseItemsIndex = (bidHouseItemsIndex + 1))
            {
                ObjectItemGenericQuantityPrice objectToAdd = new ObjectItemGenericQuantityPrice();
                objectToAdd.Deserialize(reader);
                m_bidHouseItems.Add(objectToAdd);
            }
            int merchantItemsCount = reader.ReadUShort();
            int merchantItemsIndex;
            m_merchantItems = new System.Collections.Generic.List<ObjectItemGenericQuantityPrice>();
            for (merchantItemsIndex = 0; (merchantItemsIndex < merchantItemsCount); merchantItemsIndex = (merchantItemsIndex + 1))
            {
                ObjectItemGenericQuantityPrice objectToAdd = new ObjectItemGenericQuantityPrice();
                objectToAdd.Deserialize(reader);
                m_merchantItems.Add(objectToAdd);
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Common.Protocol.Messages.Game.Look
{
    using System.Collections.Generic;
    using BlueSheep.Common;
	using BlueSheep.Common.Protocol.Types;


    public class AccessoryPreviewRequestMessage : Message
    {
        
        public const int ProtocolId = 6518;
        
        public override int MessageID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private List<System.UInt16> m_genericId;
        
        public virtual List<System.UInt16> GenericId
        {
            get
            {
                return m_genericId;
            }
            set
            {
                m_genericId = value;
            }
        }
        
        public AccessoryPreviewRequestMessage(List<System.UInt16> genericId)
        {
            m_genericId = genericId;
        }
        
        public AccessoryPreviewRequestMessage()
        {
        }
        
        public override void Serialize(IDataWriter writer)
        {
            writer.WriteShort(((short)(m_genericId.Count)));
            int genericIdIndex;
            for (genericIdIndex = 0; (genericIdIndex < m_genericId.Count); genericIdIndex = (genericIdIndex + 1))
            {
                writer.WriteVarShort(m_genericId[genericIdIndex]);
            }
        }
        
        public override void Deserialize(IDataReader reader)
        {
            int genericIdCount = reader.ReadUShort();
            int genericIdIndex;
            m_genericId = new System.Collections.Generic.List<ushort>();
            for (genericIdIndex = 0; (genericIdIndex < genericIdCount); genericIdIndex = (genericIdIndex + 1))
            {
                m_genericId.Add(reader.ReadVarUhShort());
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Common.Protocol.Types.Game.Context.Fight
{
    using BlueSheep.Common.Protocol.Types.Game.Character.Status;
    using BlueSheep.Common.Protocol.Types.Game.Look;
    using BlueSheep.Common.Protocol.Types.Game.Context;
    using System.Collections.Generic;
    using BlueSheep.Common.Protocol.Messages;
    using BlueSheep.Common.Protocol.Types;
    
    
    using BlueSheep.Protocol;
    
    
    public class GameFightFighterNamedInformations : GameFightFighterInformations
    {
        
        public new const int ID = 158;
        
        public virtual int TypeID
        {
            get
            {
                return ID;
            }
        }
        
        private PlayerStatus m_status;
        
        public virtual PlayerStatus Status
        {
            get
            {
                return m_status;
            }
            set
            {
                m_status = value;
            }
        }
        
        private string m_name;
        
        public virtual string Name
        {
            get
            {
                return m_name;
            }
            set
            {
                m_name = value;
            }
        }
        
        public GameFightFighterNamedInformations(PlayerStatus status, string name)
        {
            m_status = status;
            m_name = name;
        }
        
        public GameFightFighterNamedInformations()
        {
        }
        
        public void Serialize(IDataWriter writer)
        {
            base.Serialize(writer);
            m_status.Serialize(writer);
            writer.WriteUTF(m_name);
        }
        
        public void Deserialize(IDataReader reader)
        {
            base.Deserialize(reader);
            m_status = new PlayerStatus();
            m_status.Deserialize(reader);
            m_name = reader.ReadUTF();
        }
    }
}

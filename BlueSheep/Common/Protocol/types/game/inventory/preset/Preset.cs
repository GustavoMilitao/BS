//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Common.Protocol.Types.Game.Inventory.Preset
{
    using System.Collections.Generic;
    using BlueSheep.Common.Protocol.Messages;
    using BlueSheep.Common.Protocol.Types;
    using BlueSheep.Protocol;
    
    
    public class Preset 
    {
        
        public new const int ID = 355;
        
        public virtual int TypeID
        {
            get
            {
                return ID;
            }
        }
        
        private List<PresetItem> m_objects;
        
        public virtual List<PresetItem> Objects
        {
            get
            {
                return m_objects;
            }
            set
            {
                m_objects = value;
            }
        }
        
        private byte m_presetId;
        
        public virtual byte PresetId
        {
            get
            {
                return m_presetId;
            }
            set
            {
                m_presetId = value;
            }
        }
        
        private byte m_symbolId;
        
        public virtual byte SymbolId
        {
            get
            {
                return m_symbolId;
            }
            set
            {
                m_symbolId = value;
            }
        }
        
        private bool m_mount;
        
        public virtual bool Mount
        {
            get
            {
                return m_mount;
            }
            set
            {
                m_mount = value;
            }
        }
        
        public Preset(List<PresetItem> objects, byte presetId, byte symbolId, bool mount)
        {
            m_objects = objects;
            m_presetId = presetId;
            m_symbolId = symbolId;
            m_mount = mount;
        }
        
        public Preset()
        {
        }
        
        public void Serialize(IDataWriter writer)
        {
            writer.WriteShort(((short)(m_objects.Count)));
            int objectsIndex;
            for (objectsIndex = 0; (objectsIndex < m_objects.Count); objectsIndex = (objectsIndex + 1))
            {
                PresetItem objectToSend = m_objects[objectsIndex];
                objectToSend.Serialize(writer);
            }
            writer.WriteByte(m_presetId);
            writer.WriteByte(m_symbolId);
            writer.WriteBoolean(m_mount);
        }
        
        public void Deserialize(IDataReader reader)
        {
            int objectsCount = reader.ReadUShort();
            int objectsIndex;
            m_objects = new System.Collections.Generic.List<PresetItem>();
            for (objectsIndex = 0; (objectsIndex < objectsCount); objectsIndex = (objectsIndex + 1))
            {
                PresetItem objectToAdd = new PresetItem();
                objectToAdd.Deserialize(reader);
                m_objects.Add(objectToAdd);
            }
            m_presetId = reader.ReadByte();
            m_symbolId = reader.ReadByte();
            m_mount = reader.ReadBoolean();
        }
    }
}

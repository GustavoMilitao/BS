//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Common.DataCenter
{
    using System.Collections.Generic;
    using System;


    [Serializable()]
    public class Monster : IData
    {
        
        public virtual int Id
        {
            get
            {
                return mId;
            }
            set
            {
                mId = value;
            }
        }
        
        private int mId;
        
        public virtual uint NameId
        {
            get
            {
                return mNameId;
            }
            set
            {
                mNameId = value;
            }
        }
        
        private uint mNameId;
        
        public virtual uint GfxId
        {
            get
            {
                return mGfxId;
            }
            set
            {
                mGfxId = value;
            }
        }
        
        private uint mGfxId;
        
        public virtual int Race
        {
            get
            {
                return mRace;
            }
            set
            {
                mRace = value;
            }
        }
        
        private int mRace;
        
        public virtual List<MonsterGrade> Grades
        {
            get
            {
                return mGrades;
            }
            set
            {
                mGrades = value;
            }
        }
        
        private List<MonsterGrade> mGrades = new List<MonsterGrade>();
        
        public virtual string Look
        {
            get
            {
                return mLook;
            }
            set
            {
                mLook = value;
            }
        }
        
        private string mLook;
        
        public virtual bool UseSummonSlot
        {
            get
            {
                return mUseSummonSlot;
            }
            set
            {
                mUseSummonSlot = value;
            }
        }
        
        private bool mUseSummonSlot;
        
        public virtual bool UseBombSlot
        {
            get
            {
                return mUseBombSlot;
            }
            set
            {
                mUseBombSlot = value;
            }
        }
        
        private bool mUseBombSlot;
        
        public virtual bool CanPlay
        {
            get
            {
                return mCanPlay;
            }
            set
            {
                mCanPlay = value;
            }
        }
        
        private bool mCanPlay;
        
        public virtual bool CanTackle
        {
            get
            {
                return mCanTackle;
            }
            set
            {
                mCanTackle = value;
            }
        }
        
        private bool mCanTackle;
        
        public virtual List<AnimFunMonsterData> AnimFunList
        {
            get
            {
                return mAnimFunList;
            }
            set
            {
                mAnimFunList = value;
            }
        }
        
        private List<AnimFunMonsterData> mAnimFunList = new List<AnimFunMonsterData>();
        
        public virtual bool IsBoss
        {
            get
            {
                return mIsBoss;
            }
            set
            {
                mIsBoss = value;
            }
        }
        
        private bool mIsBoss;
        
        public virtual List<MonsterDrop> Drops
        {
            get
            {
                return mDrops;
            }
            set
            {
                mDrops = value;
            }
        }
        
        private List<MonsterDrop> mDrops = new List<MonsterDrop>();
        
        public virtual List<uint> Subareas
        {
            get
            {
                return mSubareas;
            }
            set
            {
                mSubareas = value;
            }
        }
        
        private List<uint> mSubareas = new List<uint>();
        
        public virtual List<uint> Spells
        {
            get
            {
                return mSpells;
            }
            set
            {
                mSpells = value;
            }
        }
        
        private List<uint> mSpells = new List<uint>();
        
        public virtual int FavoriteSubareaId
        {
            get
            {
                return mFavoriteSubareaId;
            }
            set
            {
                mFavoriteSubareaId = value;
            }
        }
        
        private int mFavoriteSubareaId;
        
        public virtual bool IsMiniBoss
        {
            get
            {
                return mIsMiniBoss;
            }
            set
            {
                mIsMiniBoss = value;
            }
        }
        
        private bool mIsMiniBoss;
        
        public virtual bool IsQuestMonster
        {
            get
            {
                return mIsQuestMonster;
            }
            set
            {
                mIsQuestMonster = value;
            }
        }
        
        private bool mIsQuestMonster;
        
        public virtual uint CorrespondingMiniBossId
        {
            get
            {
                return mCorrespondingMiniBossId;
            }
            set
            {
                mCorrespondingMiniBossId = value;
            }
        }
        
        private uint mCorrespondingMiniBossId;
        
        public virtual int CreatureBoneId
        {
            get
            {
                return mCreatureBoneId;
            }
            set
            {
                mCreatureBoneId = value;
            }
        }
        
        private int mCreatureBoneId;
        
        public virtual bool CanBePushed
        {
            get
            {
                return mCanBePushed;
            }
            set
            {
                mCanBePushed = value;
            }
        }
        
        private bool mCanBePushed;
        
        public virtual bool FastAnimsFun
        {
            get
            {
                return mFastAnimsFun;
            }
            set
            {
                mFastAnimsFun = value;
            }
        }
        
        private bool mFastAnimsFun;
        
        public virtual bool CanSwitchPos
        {
            get
            {
                return mCanSwitchPos;
            }
            set
            {
                mCanSwitchPos = value;
            }
        }
        
        private bool mCanSwitchPos;
        
        public virtual List<uint> IncompatibleIdols
        {
            get
            {
                return mIncompatibleIdols;
            }
            set
            {
                mIncompatibleIdols = value;
            }
        }
        
        private List<uint> mIncompatibleIdols = new List<uint>();
        
        public virtual bool AllIdolsDisabled
        {
            get
            {
                return mAllIdolsDisabled;
            }
            set
            {
                mAllIdolsDisabled = value;
            }
        }
        
        private bool mAllIdolsDisabled;
        
        public virtual bool DareAvailable
        {
            get
            {
                return mDareAvailable;
            }
            set
            {
                mDareAvailable = value;
            }
        }
        
        private bool mDareAvailable;
        
        public virtual List<uint> IncompatibleChallenges
        {
            get
            {
                return mIncompatibleChallenges;
            }
            set
            {
                mIncompatibleChallenges = value;
            }
        }
        
        private List<uint> mIncompatibleChallenges = new List<uint>();
        
        public Monster()
        {
        }
    }
}

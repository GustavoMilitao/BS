//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Protocol.Types.Web.Krosmaster
{
    using BlueSheep.Protocol.Types;


    public class KrosmasterFigure : NetworkType
    {
        
        public const int ProtocolId = 397;
        
        public override int TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private string m_uid;
        
        public virtual string Uid
        {
            get
            {
                return m_uid;
            }
            set
            {
                m_uid = value;
            }
        }
        
        private ushort m_figure;
        
        public virtual ushort Figure
        {
            get
            {
                return m_figure;
            }
            set
            {
                m_figure = value;
            }
        }
        
        private ushort m_pedestal;
        
        public virtual ushort Pedestal
        {
            get
            {
                return m_pedestal;
            }
            set
            {
                m_pedestal = value;
            }
        }
        
        private bool m_bound;
        
        public virtual bool Bound
        {
            get
            {
                return m_bound;
            }
            set
            {
                m_bound = value;
            }
        }
        
        public KrosmasterFigure(string uid, ushort figure, ushort pedestal, bool bound)
        {
            m_uid = uid;
            m_figure = figure;
            m_pedestal = pedestal;
            m_bound = bound;
        }
        
        public KrosmasterFigure()
        {
        }
        
        public override void Serialize(IDataWriter writer)
        {
            writer.WriteUTF(m_uid);
            writer.WriteVarShort(m_figure);
            writer.WriteVarShort(m_pedestal);
            writer.WriteBoolean(m_bound);
        }
        
        public override void Deserialize(IDataReader reader)
        {
            m_uid = reader.ReadUTF();
            m_figure = reader.ReadVarUhShort();
            m_pedestal = reader.ReadVarUhShort();
            m_bound = reader.ReadBoolean();
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BlueSheep.Protocol.Types.Game.Interactive
{
    using BlueSheep.Protocol.Types;


    public class StatedElement : NetworkType
    {
        
        protected override int ProtocolId { get; set; } = 108;
        
        public override int TypeID
        {
            get
            {
                return ProtocolId;
            }
        }
        
        private int m_elementId;
        
        public virtual int ElementId
        {
            get
            {
                return m_elementId;
            }
            set
            {
                m_elementId = value;
            }
        }
        
        private ushort m_elementCellId;
        
        public virtual ushort ElementCellId
        {
            get
            {
                return m_elementCellId;
            }
            set
            {
                m_elementCellId = value;
            }
        }
        
        private uint m_elementState;
        
        public virtual uint ElementState
        {
            get
            {
                return m_elementState;
            }
            set
            {
                m_elementState = value;
            }
        }
        
        private bool m_onCurrentMap;
        
        public virtual bool OnCurrentMap
        {
            get
            {
                return m_onCurrentMap;
            }
            set
            {
                m_onCurrentMap = value;
            }
        }
        
        public StatedElement(int elementId, ushort elementCellId, uint elementState, bool onCurrentMap)
        {
            m_elementId = elementId;
            m_elementCellId = elementCellId;
            m_elementState = elementState;
            m_onCurrentMap = onCurrentMap;
        }
        
        public StatedElement()
        {
        }
        
        public override void Serialize(IDataWriter writer)
        {
            writer.WriteInt(m_elementId);
            writer.WriteVarShort(m_elementCellId);
            writer.WriteVarInt(m_elementState);
            writer.WriteBoolean(m_onCurrentMap);
        }
        
        public override void Deserialize(IDataReader reader)
        {
            m_elementId = reader.ReadInt();
            m_elementCellId = reader.ReadVarUhShort();
            m_elementState = reader.ReadVarUhInt();
            m_onCurrentMap = reader.ReadBoolean();
        }
    }
}
